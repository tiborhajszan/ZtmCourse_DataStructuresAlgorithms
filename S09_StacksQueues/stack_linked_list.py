########################################################################################################################
### Data Structures and Algorithms :: Section 09
### Stack Implementation Using Linked List
########################################################################################################################

### imports ############################################################################################################

###

########################################################################################################################
### Stack Class
########################################################################################################################

class Stack:

    ### constructor method #############################################################################################
    def __init__(self) -> None:
        """
        Initializes a new empty Stack object.

        Attributes:
        - top : Dict[str,Any], top node of stack
        - bottom : Dict[str,Any], bottom node of stack
        - length : int, number of nodes in stack

        Returns:
        - None
        """

        ### initializing attributes ------------------------------------------------------------------------------------

        self.top = None
        self.bottom = None
        self.length = 0

        ### returning none ---------------------------------------------------------------------------------------------

        return

### testing code #######################################################################################################

print()
