########################################################################################################################
### Data Structures and Algorithms :: Section 11
### Graph Implementation
########################################################################################################################

### imports ------------------------------------------------------------------------------------------------------------

from typing import Dict, Any

########################################################################################################################
### Graph Class
########################################################################################################################

class Graph:

    ### constructor method ---------------------------------------------------------------------------------------------
    def __init__(self):
        """
        Initializes a new empty Graph object.

        Args:
        - None

        Attributes:
        - nodes : Dict[Any,Any], adjacency / node list
        - size : int, number of nodes in graph

        Returns:
        - None
        """

        self.nodes: Dict[Any,Any] = dict()
        self.size: int = int(0)
        return

########################################################################################################################
### testing code
########################################################################################################################

print()
my_graph = Graph()
